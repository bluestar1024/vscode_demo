cmake_minimum_required(VERSION 2.8)
project(MYTEST)
#set(EXE "mytest")
set(ALL_SRC_DIR "." "src")
set(ALL_INC_DIR "." "inc")
set(ALL_LIB_DIR "${PROJECT_SOURCE_DIR}/lib/squ" "${PROJECT_SOURCE_DIR}/lib/cb")
set(ALL_LIB_NAME "lsqu" "lcb")

set(CMAKE_C_COMPILER "gcc")

if(CMAKE_BUILD_TYPE STREQUAL debug)
    set(EXE "mytest_debug")
    add_definitions(-D MYDEBUG)
    message(-----debug:${CMAKE_C_FLAGS_DEBUG}-----)
    set(CMAKE_C_FLAGS_DEBUG "-g3 -O0 -Wall")
    message(-----debug:${CMAKE_C_FLAGS_DEBUG}-----)
elseif(CMAKE_BUILD_TYPE STREQUAL release)
    set(EXE "mytest_release")
    add_definitions(-D MYRELEASE)
    message(-----release:${CMAKE_C_FLAGS_RELEASE}-----)
    set(CMAKE_C_FLAGS_RELEASE "-DNDEBUG -O0 -Wall -Werror")
    message(-----release:${CMAKE_C_FLAGS_RELEASE}-----)
endif()

#set(ALL_LIB_DIR "./lib/squ" "./lib/cb")
#set(ALL_LIB_DIR "/home/dong/cmake_demo/test/lib/squ" "/home/dong/cmake_demo/test/lib/cb")

#add_library(yxs_squ "lib/squ/fsqu.c")
#add_library(yxs_cb "lib/cb/fcb.c")
#set(ALL_LIB_NAME "yxs_squ" "yxs_cb")
#set(ALL_LIB_DIR ${PROJECT_BINARY_DIR})

include_directories(${ALL_INC_DIR})
link_directories(${ALL_LIB_DIR})
foreach(SRC_DIR ${ALL_SRC_DIR})
    aux_source_directory(${SRC_DIR} SRCS)
    message(---------------------${SRCS})
endforeach()
add_executable(${EXE} ${SRCS})
target_link_libraries(${EXE} ${ALL_LIB_NAME})